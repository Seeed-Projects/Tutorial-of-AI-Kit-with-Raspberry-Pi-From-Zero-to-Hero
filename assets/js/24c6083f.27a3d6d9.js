"use strict";(self.webpackChunktutorial_of_ai_kit=self.webpackChunktutorial_of_ai_kit||[]).push([[3482],{170:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=i(5893),t=i(1151);const s={sidebar_position:8},o="Hailo Toolbox Quick Start Guide",l={id:"Chapter_6-RaspberryPi_and_AIoT/hailo_tools",title:"Hailo Toolbox Quick Start Guide",description:"This document will introduce how to install and use the Hailo Toolbox, a comprehensive toolkit designed for deep learning model conversion and inference. This guide contains complete instructions from basic installation to advanced usage.",source:"@site/../articles/Chapter_6-RaspberryPi_and_AIoT/hailo_tools.md",sourceDirName:"Chapter_6-RaspberryPi_and_AIoT",slug:"/Chapter_6-RaspberryPi_and_AIoT/hailo_tools",permalink:"/Tutorial-of-AI-Kit-with-Raspberry-Pi-From-Zero-to-Hero/docs/Chapter_6-RaspberryPi_and_AIoT/hailo_tools",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Real Time OCR with Hailo",permalink:"/Tutorial-of-AI-Kit-with-Raspberry-Pi-From-Zero-to-Hero/docs/Chapter_6-RaspberryPi_and_AIoT/Real_time_OCR_with_hailo"},next:{title:"Hailo-Powered Car Park Management with ThingsBoard",permalink:"/Tutorial-of-AI-Kit-with-Raspberry-Pi-From-Zero-to-Hero/docs/Chapter_6-RaspberryPi_and_AIoT/Car_Park_Solution_Management_with_Thingsboard"}},d={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"System Requirements",id:"system-requirements",level:2},{value:"Basic Requirements",id:"basic-requirements",level:3},{value:"Hailo-Specific Requirements",id:"hailo-specific-requirements",level:3},{value:"Python Dependencies",id:"python-dependencies",level:3},{value:"Installation",id:"installation",level:2},{value:"Method 1: Install from Source (Recommended)",id:"method-1-install-from-source-recommended",level:3},{value:"Method 2: Create Virtual Environment (Recommended)",id:"method-2-create-virtual-environment-recommended",level:3},{value:"Verify Installation",id:"verify-installation",level:2},{value:"Model Conversion",id:"model-conversion",level:2},{value:"Supported Model Formats",id:"supported-model-formats",level:3},{value:"Basic Conversion Commands",id:"basic-conversion-commands",level:3},{value:"Conversion Parameter Details",id:"conversion-parameter-details",level:3},{value:"Model Inference",id:"model-inference",level:2},{value:"Inference Examples",id:"inference-examples",level:3},{value:"Supported Input Source Types",id:"supported-input-source-types",level:3},{value:"Code Explanation",id:"code-explanation",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"hailo-toolbox-quick-start-guide",children:"Hailo Toolbox Quick Start Guide"}),"\n",(0,r.jsxs)(n.p,{children:["This document will introduce how to install and use the ",(0,r.jsx)(n.a,{href:"https://github.com/Seeed-Projects/hailo_toolbox",children:"Hailo Toolbox"}),", a comprehensive toolkit designed for deep learning model conversion and inference. This guide contains complete instructions from basic installation to advanced usage."]}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#system-requirements",children:"System Requirements"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#verify-installation",children:"Verify Installation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#project-structure",children:"Project Structure"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#model-conversion",children:"Model Conversion"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#model-inference",children:"Model Inference"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"system-requirements",children:"System Requirements"}),"\n",(0,r.jsx)(n.h3,{id:"basic-requirements",children:"Basic Requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Python Version"}),": 3.8 \u2264 Python < 3.12"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Operating System"}),": Linux (Ubuntu 18.04+ recommended), Windows 10+"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory"}),": At least 8GB RAM (16GB+ recommended)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Storage"}),": At least 2GB available space"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hailo-specific-requirements",children:"Hailo-Specific Requirements"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://hailo.ai/developer-zone/software-downloads/",children:"Hailo Dataflow Compiler"})}),": For model conversion functionality (required if using conversion features, X86 architecture and Linux only), refer to ",(0,r.jsx)(n.a,{href:"https://wiki.seeedstudio.com/tutorial_of_ai_kit_with_raspberrypi5_about_yolov8n_object_detection/",children:"installation tutorial"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://hailo.ai/developer-zone/software-downloads/",children:"HailoRT"})}),": For inference functionality (required when using inference features), refer to ",(0,r.jsx)(n.a,{href:"https://wiki.seeedstudio.com/benchmark_on_rpi5_and_cm4_running_yolov8s_with_rpi_ai_kit/",children:"installation tutorial"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hailo Hardware"}),": For hardware-accelerated inference (required when using inference features)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"python-dependencies",children:"Python Dependencies"}),"\n",(0,r.jsx)(n.p,{children:"Core dependency packages will be automatically installed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"opencv-python>=4.5.0\nnumpy<2.0.0\nrequests>=2.25.0\nmatplotlib>=3.3.0\nonnx\nonnxruntime\npillow\npyyaml\ntqdm\n"})}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.h3,{id:"method-1-install-from-source-recommended",children:"Method 1: Install from Source (Recommended)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clone project source code\ngit clone https://github.com/Seeed-Projects/hailo_toolbox.git\n\n# Enter project directory\ncd hailo_toolbox\n\n# Install project (development mode)\npip install -e .\n\n# Or install directly\npip install .\n"})}),"\n",(0,r.jsx)(n.h3,{id:"method-2-create-virtual-environment-recommended",children:"Method 2: Create Virtual Environment (Recommended)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create virtual environment\npython -m venv hailo_env\n\n# Activate virtual environment\n# Linux/macOS:\nsource hailo_env/bin/activate\n# Windows:\nhailo_env\\Scripts\\activate\n\n# Install project\ngit clone https://github.com/Seeed-Projects/hailo_toolbox.git\ncd hailo_toolbox\npip install -e .\n"})}),"\n",(0,r.jsx)(n.h2,{id:"verify-installation",children:"Verify Installation"}),"\n",(0,r.jsx)(n.p,{children:"After installation, verify successful installation with the following commands:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check version information\nhailo-toolbox --version\n\n# View help information\nhailo-toolbox --help\n\n# View conversion functionality help\nhailo-toolbox convert --help\n\n# View inference functionality help\nhailo-toolbox infer --help\n"})}),"\n",(0,r.jsx)(n.h2,{id:"model-conversion",children:"Model Conversion"}),"\n",(0,r.jsxs)(n.p,{children:["Hailo Toolbox supports converting models from various deep learning frameworks to efficient ",(0,r.jsx)(n.code,{children:".hef"})," format for running on Hailo hardware."]}),"\n",(0,r.jsx)(n.h3,{id:"supported-model-formats",children:"Supported Model Formats"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Framework"}),(0,r.jsx)(n.th,{children:"Format"}),(0,r.jsx)(n.th,{children:"Supported"}),(0,r.jsx)(n.th,{children:"Target Format"}),(0,r.jsx)(n.th,{children:"Notes"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ONNX"}),(0,r.jsx)(n.td,{children:".onnx"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:".hef"}),(0,r.jsx)(n.td,{children:"Recommended format"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"TensorFlow"}),(0,r.jsx)(n.td,{children:".h5"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:".hef"}),(0,r.jsx)(n.td,{children:"Keras models"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"TensorFlow"}),(0,r.jsx)(n.td,{children:"SavedModel.pb"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:".hef"}),(0,r.jsx)(n.td,{children:"TensorFlow SavedModel"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"TensorFlow Lite"}),(0,r.jsx)(n.td,{children:".tflite"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:".hef"}),(0,r.jsx)(n.td,{children:"Mobile models"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PyTorch"}),(0,r.jsx)(n.td,{children:".pt (torchscript)"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:".hef"}),(0,r.jsx)(n.td,{children:"TorchScript models"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PaddlePaddle"}),(0,r.jsx)(n.td,{children:"inference model"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:".hef"}),(0,r.jsx)(n.td,{children:"PaddlePaddle inference models"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"basic-conversion-commands",children:"Basic Conversion Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# View conversion help\nhailo-toolbox convert --help\n\n# Basic conversion (ONNX to HEF)\nhailo-toolbox convert model.onnx --hw-arch hailo8\n\n# Complete conversion example\nhailo-toolbox convert model.onnx \\\n    --hw-arch hailo8 \\\n    --input-shape 320,320,3 \\\n    --save-onnx \\\n    --output-dir outputs \\\n    --profile \\\n    --calib-set-path ./calibration_images\n"})}),"\n",(0,r.jsx)(n.h3,{id:"conversion-parameter-details",children:"Conversion Parameter Details"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Required"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"model"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"-"}),(0,r.jsx)(n.td,{children:"Model file path to convert"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"model.onnx"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--hw-arch"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"hailo8"})}),(0,r.jsx)(n.td,{children:"Target Hailo hardware architecture"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"hailo8"}),", ",(0,r.jsx)(n.code,{children:"hailo8l"}),", ",(0,r.jsx)(n.code,{children:"hailo15"}),", ",(0,r.jsx)(n.code,{children:"hailo15l"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--calib-set-path"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"None"}),(0,r.jsx)(n.td,{children:"Calibration dataset folder path"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"./calibration_data/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--use-random-calib-set"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"False"}),(0,r.jsx)(n.td,{children:"Use random data for calibration"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--calib-set-size"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"None"}),(0,r.jsx)(n.td,{children:"Calibration dataset size"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"100"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--model-script"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"None"}),(0,r.jsx)(n.td,{children:"Custom model script path"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"./custom_script.py"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--end-nodes"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"None"}),(0,r.jsx)(n.td,{children:"Specify model output nodes"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"output1,output2"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--input-shape"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"[640,640,3]"})}),(0,r.jsx)(n.td,{children:"Model input shape"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"320,320,3"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--save-onnx"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"False"}),(0,r.jsx)(n.td,{children:"Save compiled ONNX file"}),(0,r.jsx)(n.td,{children:"-"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--output-dir"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"Same as model"}),(0,r.jsx)(n.td,{children:"Output file save directory"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"./outputs/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--profile"})}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"False"}),(0,r.jsx)(n.td,{children:"Generate performance analysis report"}),(0,r.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"model-inference",children:"Model Inference"}),"\n",(0,r.jsx)(n.p,{children:"Hailo Toolbox provides flexible inference interfaces supporting various input sources and output formats."}),"\n",(0,r.jsx)(n.h3,{id:"inference-examples",children:"Inference Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# View inference help\ncd examples\n\n# Basic inference example\npython Hailo_Object_Detection.py\n"})}),"\n",(0,r.jsx)(n.h3,{id:"supported-input-source-types",children:"Supported Input Source Types"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Input Source Type"}),(0,r.jsx)(n.th,{children:"Format"}),(0,r.jsx)(n.th,{children:"Example"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Image files"}),(0,r.jsx)(n.td,{children:"jpg, png, bmp, etc."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"image.jpg"})}),(0,r.jsx)(n.td,{children:"Single image inference"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Image folders"}),(0,r.jsx)(n.td,{children:"Directory path"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"./images/"})}),(0,r.jsx)(n.td,{children:"Batch image inference"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Video files"}),(0,r.jsx)(n.td,{children:"mp4, avi, mov, etc."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"video.mp4"})}),(0,r.jsx)(n.td,{children:"Video file inference"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"USB cameras"}),(0,r.jsx)(n.td,{children:"Device ID"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"0"}),", ",(0,r.jsx)(n.code,{children:"1"})]}),(0,r.jsx)(n.td,{children:"Real-time camera inference"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"IP cameras"}),(0,r.jsx)(n.td,{children:"RTSP/HTTP stream"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"rtsp://ip:port/stream"})}),(0,r.jsx)(n.td,{children:"Network camera inference"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Network video streams"}),(0,r.jsx)(n.td,{children:"URL"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"http://example.com/stream"})}),(0,r.jsx)(n.td,{children:"Online video stream inference"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"code-explanation",children:"Code Explanation"}),"\n",(0,r.jsx)(n.p,{children:"To help with understanding:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from hailo_toolbox import create_source     # API for loading image sources\nfrom hailo_toolbox.models import ModelsZoo  # Model library\nfrom hailo_toolbox.process.visualization import DetectionVisualization  # Pre-implemented object detection visualization tool\nimport cv2  # OpenCV tools\n\nif __name__ == "__main__":\n    # Create model input source\n    source = create_source(\n        "https://hailo-csdata.s3.eu-west-2.amazonaws.com/resources/video/example.mp4"\n    )\n\n    # Load YOLOv8n detection model\n    # Load yolov8s model under object detection task\n    inference = ModelsZoo.detection.yolov8s()\n    # Load visualization module\n    visualization = DetectionVisualization()\n\n    # Read image source frame by frame\n    for img in source:\n        # Pass image to model for inference prediction, inference module will perform corresponding preprocessing and postprocessing based on model configuration, and wrap processing results into directly usable data\n        results = inference.predict(img)\n        # Get inference results for each image sequentially, model accepts multiple images for simultaneous inference, so returned results are processing results for each image\n        for result in results:\n            # Visualize inference results\n            img = visualization.visualize(img, result)\n            cv2.imshow("Detection", img)\n            cv2.waitKey(1)\n            # print(f"Detected {len(result)} objects")\n            # Get predicted bounding boxes for current image\n            boxes = result.get_boxes()\n            # Get predicted confidence scores for current image\n            scores = result.get_scores()\n            # Get predicted class IDs for current image\n            class_ids = result.get_class_ids()\n\n            # Show first 5 detection results\n            for i in range(min(5, len(result))):\n                print(\n                    f"  Object{i}: bbox{boxes[i]}, score{scores[i]:.3f}, class{class_ids[i]}"\n                )\n            print("---")\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>o});var r=i(7294);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);