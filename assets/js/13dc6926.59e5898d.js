"use strict";(self.webpackChunktutorial_of_ai_kit=self.webpackChunktutorial_of_ai_kit||[]).push([[866],{7370:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=t(5893),s=t(1151);const a={},r="Hailo-Powered Car Park Management with ThingsBoard",o={id:"Chapter_6-RaspberryPi_and_AIoT/Car_Park_Solution_Management_with_Thingsboard",title:"Hailo-Powered Car Park Management with ThingsBoard",description:"This project delivers a custom model for detecting parking possibilities in a car park. The system identifies three classes: available slots, parked slots, and improper parking.",source:"@site/../articles/Chapter_6-RaspberryPi_and_AIoT/Car_Park_Solution_Management_with_Thingsboard.md",sourceDirName:"Chapter_6-RaspberryPi_and_AIoT",slug:"/Chapter_6-RaspberryPi_and_AIoT/Car_Park_Solution_Management_with_Thingsboard",permalink:"/Tutorial-of-AI-Kit-with-Raspberry-Pi-From-Zero-to-Hero/docs/Chapter_6-RaspberryPi_and_AIoT/Car_Park_Solution_Management_with_Thingsboard",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DIY AI Surveillance Using Frigate NVR and Hailo on reComputer with Home Assistant",permalink:"/Tutorial-of-AI-Kit-with-Raspberry-Pi-From-Zero-to-Hero/docs/Chapter_6-RaspberryPi_and_AIoT/DIY_AI_Surveillance_Using_Frigate_NVR_and_Hailo_on_reComputer_with_Home_Assistant"}},d={},l=[{value:"Step 1: Data Collection and Labeling",id:"step-1-data-collection-and-labeling",level:2},{value:"Step 2: Model Training",id:"step-2-model-training",level:2},{value:"Step 3: Deploy the Model",id:"step-3-deploy-the-model",level:2},{value:"Step 4: Install ThingsBoard and Add a Device",id:"step-4-install-thingsboard-and-add-a-device",level:2},{value:"Step 5: Provision a Device",id:"step-5-provision-a-device",level:2},{value:"Step 6: Connect the Device",id:"step-6-connect-the-device",level:2},{value:"Step 7: Run the Detection Code",id:"step-7-run-the-detection-code",level:2},{value:"Step 8: Create a Dashboard",id:"step-8-create-a-dashboard",level:2},{value:"Create an Empty Dashboard",id:"create-an-empty-dashboard",level:3},{value:"Add a Chart Widget",id:"add-a-chart-widget",level:3},{value:"Demo",id:"demo",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"hailo-powered-car-park-management-with-thingsboard",children:"Hailo-Powered Car Park Management with ThingsBoard"}),"\n",(0,i.jsx)(n.p,{children:"This project delivers a custom model for detecting parking possibilities in a car park. The system identifies three classes: available slots, parked slots, and improper parking."}),"\n",(0,i.jsx)(n.p,{children:"The model was trained using the YOLOv8n framework and deployed on a Raspberry Pi with a Hailo-8L accelerator. The modified code enables real-time parking slot counting and sends MQTT messages to the ThingsBoard IoT platform."}),"\n",(0,i.jsx)(n.p,{children:"ThingsBoard provides an intuitive interface for data visualization and analysis, making it easy to monitor parking conditions and optimize management."}),"\n",(0,i.jsx)(n.h2,{id:"step-1-data-collection-and-labeling",children:"Step 1: Data Collection and Labeling"}),"\n",(0,i.jsx)(n.p,{children:"We created a small prototype of a car park to demonstrate the working phenomenon. Using a webcam connected to a Raspberry Pi, we collected images of the parking area. These images were then uploaded to a Roboflow repository for further processing."}),"\n",(0,i.jsx)(n.p,{children:"The images were labeled into three distinct classes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Available"}),"\n",(0,i.jsx)(n.li,{children:"Parked"}),"\n",(0,i.jsx)(n.li,{children:"Improper"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"license",src:t(1588).Z+"",width:"1911",height:"834"})}),"\n",(0,i.jsxs)(n.p,{children:["You can view the project here: ",(0,i.jsx)(n.a,{href:"https://app.roboflow.com/kasun-thushara-fxbng/car-park-cq0uw/1",children:"Car Park - Roboflow Repository"})]}),"\n",(0,i.jsx)(n.h2,{id:"step-2-model-training",children:"Step 2: Model Training"}),"\n",(0,i.jsx)(n.p,{children:"We trained a YOLOv8n model using a custom dataset. Roboflow provides a downloadable link for the dataset, which can be used to train the model with YOLOv8n."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"license",src:t(3557).Z+"",width:"1000",height:"552"})}),"\n",(0,i.jsx)(n.p,{children:"After training, the model must be exported to the ONNX format for deployment."}),"\n",(0,i.jsx)(n.p,{children:"Detailed instructions on model labeling and training can be found in Chapter 5"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://seeed-projects.github.io/Tutorial-of-AI-Kit-with-Raspberry-Pi-From-Zero-to-Hero/docs/Chapter_5-Custom_Model_Development_and_Deployment/Training_Your_Model",children:"How to training the model"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://seeed-projects.github.io/Tutorial-of-AI-Kit-with-Raspberry-Pi-From-Zero-to-Hero/docs/Chapter_5-Custom_Model_Development_and_Deployment/Convert_Your_Model",children:"How to convert ONNX model to HEF"})}),"\n",(0,i.jsx)(n.h2,{id:"step-3-deploy-the-model",children:"Step 3: Deploy the Model"}),"\n",(0,i.jsx)(n.p,{children:"On the Raspberry Pi, after installing Hailo tools, you can test if the detection is working correctly. For MQTT connection, ensure you install the required dependencies in the same virtual environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install -y mosquitto mosquitto-clients\npip install paho-mqtt\n"})}),"\n",(0,i.jsx)(n.p,{children:"We modified the detection_pipeline.py script and renamed it as park_object_detection.py. Below is the modified code:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'import gi\ngi.require_version(\'Gst\', \'1.0\')\nfrom gi.repository import Gst, GLib\nimport os\nimport numpy as np\nimport cv2\nimport hailo\nimport paho.mqtt.client as mqtt\nimport json\nfrom hailo_rpi_common import (\n    get_caps_from_pad,\n    get_numpy_from_buffer,\n    app_callback_class,\n)\nfrom detection_pipeline import GStreamerDetectionApp\n\n# -----------------------------------------------------------------------------------------------\n# User-defined class to be used in the callback function\n# -----------------------------------------------------------------------------------------------\nclass user_app_callback_class(app_callback_class):\n    def __init__(self):\n        super().__init__()\n        self.detection_counts = {\n            "available": 0,\n            "parked": 0,\n            "improper": 0\n        }\n\n    def reset_counts(self):\n        self.detection_counts = {key: 0 for key in self.detection_counts}\n\n# -----------------------------------------------------------------------------------------------\n# MQTT Setup\n# -----------------------------------------------------------------------------------------------\nBROKER = "192.168.8.195"  # ThingsBoard Host-Name \nCLIENT_ID = "Car_Park" # The Client ID which you give in the Thingsboard End \nPORT = 1883\nTOPIC = "v1/devices/me/telemetry"  # Topic For Sending data to ThingsBoard \n\nmqtt_client = mqtt.Client(CLIENT_ID)\n\ndef setup_mqtt():\n    mqtt_client.connect(BROKER, PORT, 60)\n    mqtt_client.loop_start()\n\ndef publish_counts(detection_counts):\n    payload = json.dumps(detection_counts)  # Convert counts to JSON format\n    mqtt_client.publish(TOPIC, payload, qos=1)\n    print(f"Published: {payload} to topic {TOPIC}")\n\n# -----------------------------------------------------------------------------------------------\n# User-defined callback function\n# -----------------------------------------------------------------------------------------------\ndef app_callback(pad, info, user_data):\n    buffer = info.get_buffer()\n    if buffer is None:\n        return Gst.PadProbeReturn.OK\n\n    user_data.reset_counts()\n    roi = hailo.get_roi_from_buffer(buffer)\n    detections = roi.get_objects_typed(hailo.HAILO_DETECTION)\n\n    for detection in detections:\n        label = detection.get_label()\n        if label in user_data.detection_counts:\n            user_data.detection_counts[label] += 1\n\n    publish_counts(user_data.detection_counts)\n    print(f"Detection Counts: {user_data.detection_counts}")\n\n    return Gst.PadProbeReturn.OK\n\n# -----------------------------------------------------------------------------------------------\n# Main\n# -----------------------------------------------------------------------------------------------\nif __name__ == "__main__":\n    setup_mqtt()\n    user_data = user_app_callback_class()\n    app = GStreamerDetectionApp(app_callback, user_data)\n\n    try:\n        app.run()\n    except KeyboardInterrupt:\n        print("Shutting down...")\n    finally:\n        mqtt_client.loop_stop()\n        mqtt_client.disconnect()\n\n'})}),"\n",(0,i.jsx)(n.h2,{id:"step-4-install-thingsboard-and-add-a-device",children:"Step 4: Install ThingsBoard and Add a Device"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://thingsboard.io/",children:"ThingsBoard"})," is an open-source IoT platform designed for device management, data collection, processing, and visualization. It supports various communication protocols such as ",(0,i.jsx)(n.strong,{children:"MQTT, CoAP, and HTTP"}),", making it versatile for integrating IoT devices and systems. The platform enables users to ",(0,i.jsx)(n.strong,{children:"create interactive dashboards, monitor devices in real-time, and analyze data through advanced visualization tools. With its rule engine, ThingsBoard automates workflows and event processing"}),", simplifying the implementation of IoT use cases across industries. Its scalability and flexibility make it suitable for projects of any size, from small prototypes to large-scale deployments.Additionally, you can use their ",(0,i.jsx)(n.a,{href:"https://thingsboard.io/products/paas/",children:"cloud solution"})," for easier deployment and management."]}),"\n",(0,i.jsxs)(n.p,{children:["We have provided instructions on ",(0,i.jsx)(n.a,{href:"https://wiki.seeedstudio.com/recomputer_r1000_thingsboard_ce/",children:"installing the ThingsBoard Community Edition"})," and the Edge version. You can refer to this wiki lesson for guidance."]}),"\n",(0,i.jsx)(n.h2,{id:"step-5-provision-a-device",children:"Step 5: Provision a Device"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Navigate to the ",(0,i.jsx)(n.strong,{children:"Devices"})," page under the ",(0,i.jsx)(n.strong,{children:"Entities"})," section."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"tb1",src:t(5195).Z+"",width:"1920",height:"1080"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Click the ",(0,i.jsx)(n.strong,{children:"'+'"})," icon in the top right corner of the table and select ",(0,i.jsx)(n.strong,{children:"'Add new device'"})," from the drop-down menu."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"tb2",src:t(566).Z+"",width:"1920",height:"1080"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Enter the ",(0,i.jsx)(n.strong,{children:"device name"}),", ",(0,i.jsx)(n.strong,{children:"Client ID"}),", ",(0,i.jsx)(n.strong,{children:"Password"}),", and ",(0,i.jsx)(n.strong,{children:"Username"}),".\nSince this is a demo, we have not added a username or password when creating the device."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.strong,{children:"Add"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"tb3",src:t(8307).Z+"",width:"1920",height:"1080"})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:"As you add more devices, they will appear at the top of the table. The table automatically sorts devices by creation time, with the newest ones listed first."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"tb5",src:t(44).Z+"",width:"1920",height:"1080"})}),"\n",(0,i.jsx)(n.h2,{id:"step-6-connect-the-device",children:"Step 6: Connect the Device"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click on your device and then click the ",(0,i.jsx)(n.strong,{children:"Check connectivity"})," button in the ",(0,i.jsx)(n.strong,{children:"Device details"})," window.\n",(0,i.jsx)(n.img,{alt:"tb6",src:t(1459).Z+"",width:"1920",height:"1080"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"In the opened window, select the messaging protocol and your operating system:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Operating System:"})," Linux"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Protocol:"})," MQTT"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"tb7",src:t(1949).Z+"",width:"1920",height:"1080"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Make sure to install the required client tools."}),"\n",(0,i.jsxs)(n.li,{children:["Execute the copied command. Once the temperature readings are published successfully, the device state will change from ",(0,i.jsx)(n.strong,{children:'"Inactive"'})," to ",(0,i.jsx)(n.strong,{children:'"Active"'}),". You will also see the published temperature readings."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"tb8",src:t(7954).Z+"",width:"1920",height:"1080"})}),"\n",(0,i.jsx)(n.h2,{id:"step-7-run-the-detection-code",children:"Step 7: Run the Detection Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd hailo-rpi5-examples\n\nsource setup_env.sh\n\ncd basic_pipelines\n\npython park_object_detection.py --labels-json /home/pi/Desktop/hailo-custom/config.json --hef-path /home/pi/Desktop/hailo-custom/yolov8n_renamed_carpark.hef -i /dev/video0\n"})}),"\n",(0,i.jsx)(n.h2,{id:"step-8-create-a-dashboard",children:"Step 8: Create a Dashboard"}),"\n",(0,i.jsx)(n.h3,{id:"create-an-empty-dashboard",children:"Create an Empty Dashboard"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Navigate to the Dashboards page from the main menu on the left side of the screen."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click the ",(0,i.jsx)(n.code,{children:"+"})," sign in the upper right corner of the screen and select 'Create new dashboard' from the drop-down menu.\n",(0,i.jsx)(n.img,{alt:"tb9",src:t(1735).Z+"",width:"1920",height:"1080"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"In the dialog box, enter a title for the dashboard (the description is optional)."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click Add.\n",(0,i.jsx)(n.img,{alt:"tb10",src:t(4023).Z+"",width:"1920",height:"1080"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"After creating the dashboard, it will open automatically, and you can start adding widgets."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["To save the dashboard, click the Save button in the upper right corner.\n",(0,i.jsx)(n.img,{alt:"tb11",src:t(9018).Z+"",width:"1920",height:"1080"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Your first dashboard is now created. As you add more dashboards, they will appear at the top of the list, sorted by the creation timestamp."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"tb12",src:t(9229).Z+"",width:"1920",height:"1080"})}),"\n",(0,i.jsx)(n.h3,{id:"add-a-chart-widget",children:"Add a Chart Widget"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Enter edit mode and click the ",(0,i.jsx)(n.code,{children:"Add new widget"})," button at the top of the screen.\n",(0,i.jsx)(n.img,{alt:"tb13",src:t(362).Z+"",width:"1920",height:"1080"}),"\n",(0,i.jsx)(n.img,{alt:"tb14",src:t(3928).Z+"",width:"1920",height:"1080"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Find the ",(0,i.jsx)(n.code,{children:"Charts"})," widget bundle and click on it.\n",(0,i.jsx)(n.img,{alt:"tb15",src:t(3623).Z+"",width:"1920",height:"1080"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Select the ",(0,i.jsx)(n.code,{children:"Time series chart"})," widget.\n",(0,i.jsx)(n.img,{alt:"tb16",src:t(6938).Z+"",width:"1920",height:"1080"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"Device"})," field, specify the device you created earlier as the data source."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["In the ",(0,i.jsx)(n.code,{children:"Series"})," section, enter the data key ",(0,i.jsx)(n.code,{children:"Available"}),",",(0,i.jsx)(n.code,{children:"Park"}),",",(0,i.jsx)(n.code,{children:"Improper"})," to monitor the car park related values of a device.\n",(0,i.jsx)(n.img,{alt:"tb16",src:t(5671).Z+"",width:"1147",height:"507"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Resize the widget and apply the changes."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Click Add."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["You can explore additional ",(0,i.jsx)(n.a,{href:"https://thingsboard.io/docs/user-guide/dashboards/",children:"dashboard widgets"})," in the system."]}),"\n",(0,i.jsx)(n.h2,{id:"demo",children:"Demo"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"demo",src:t(4357).Z+"",width:"960",height:"540"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},4357:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/demo-thingsboard-8b73ba7e49e23c2a6a78099a2b3e1710.gif"},1588:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/labeling-9f0fee65be2c2330afadbb980b0c3c96.PNG"},3557:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/roboflowapi-b3220961584add224372398291687a35.PNG"},5195:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb1-e35216000b2180c25b76c6e8a0fc0e54.png"},4023:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb10-ff559a7f7319e6e2a724627dfdcdcbf2.png"},9018:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb11-9318da0f996efd507456d5766958830e.png"},9229:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb12-675f6f2f9dc5bab38dd284ddff6802d5.png"},362:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb13-9bdf176c5ceb17c2312608ce287b87d7.png"},3928:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb14-3aa59c94c1a8e0922b4e6477fed70c15.png"},3623:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb15-46e204bea37277af16478fb0a506b771.png"},6938:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb16-22921bd57d91ba68920e8d9be034c95c.png"},566:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb2-0c1f15088fcadd89a44603f2ac59362a.png"},8307:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb3-266ba2d1c625b79eb6ad46023be02d9b.png"},44:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb5-cea6835791cf984c5399a4b1d9f0bfee.png"},1459:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb6-bcb9fd13194f504f8ba46937eef3995b.png"},1949:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb7-59a9404c4bc8eec82d556164582086f1.png"},7954:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb8-57c2803618b72796e376e4070c090ebd.png"},1735:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb9-5b6641f46b00a685a7613e9c6dd140f6.png"},5671:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/tb_chart-a146158523cacbdc2abaacaf11a0d3f5.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var i=t(7294);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);